{
  "openapi": "3.0.0",
  "info": {
    "title": "Order API",
    "description": "API for managing orders in the ECom Website project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/web",
      "description": "API Server"
    }
  ],
  "paths": {
    "/api/orders/create": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Place a new order",
        "description": "Creates a new order in the system",
        "operationId": "placeOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_order_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_response"
                }
              }
            }
          },
          "500": {
            "description": "Error processing order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/update-item-status/{orderItemId}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update order item status",
        "description": "Updates the status of a specific item in an order. Requires ADMIN authority.",
        "operationId": "updateOrderItemStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderItemId",
            "in": "path",
            "required": true,
            "description": "ID of the order item to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "description": "New status for the order item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order item status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_response"
                }
              }
            }
          },
          "500": {
            "description": "Error updating order item status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/order-status/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order status",
        "description": "Retrieves the current status of an order",
        "operationId": "getOrderStatus",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of the order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentStatus": {
                      "type": "string"
                    },
                    "orderId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving order status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/user": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get current user orders",
        "description": "Retrieves all orders for the currently authenticated user",
        "operationId": "getUserOrders",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_response"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error getting user orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}/status": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update order status",
        "description": "Updates the status of an entire order. Requires ADMIN authority.",
        "operationId": "updateOrderStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of the order to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "description": "New status for the order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_response"
                }
              }
            }
          },
          "500": {
            "description": "Error updating order status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}/payment-status": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update payment status",
        "description": "Updates the payment status of an order",
        "operationId": "updatePaymentStatus",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of the order to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "description": "New payment status for the order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_response"
                }
              }
            }
          },
          "500": {
            "description": "Error updating payment status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/all": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all orders",
        "description": "Retrieves all orders in the system",
        "operationId": "getAllOrders",
        "responses": {
          "200": {
            "description": "All orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/status/{status}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders by status",
        "description": "Retrieves all orders with a specific status",
        "operationId": "getOrdersByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Status to filter orders by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_response"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/user/{userId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders by user ID",
        "description": "Retrieves all orders for a specific user",
        "operationId": "getOrdersByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}": {
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete an order",
        "description": "Deletes an order from the system",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of the order to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/order_response"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "create_order_request": {
        "type": "object",
        "required": [
          "items",
          "shippingAddress"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "List of items in the order",
            "items": {
              "type": "object",
              "properties": {
                "goodsId": {
                  "type": "string",
                  "description": "ID of the product"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of the product"
                }
              }
            }
          },
          "shippingAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment method for the order"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes for the order"
          }
        }
      },
      "order_response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Order ID"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who placed the order"
          },
          "userName": {
            "type": "string",
            "description": "Name of the user who placed the order"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the order was placed"
          },
          "status": {
            "type": "string",
            "description": "Current status of the order"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Current payment status"
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the order"
          },
          "shippingAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "paymentMethod": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Order item ID"
                },
                "goodsId": {
                  "type": "string",
                  "description": "Product ID"
                },
                "goodsName": {
                  "type": "string",
                  "description": "Product name"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity ordered"
                },
                "price": {
                  "type": "number",
                  "format": "double",
                  "description": "Price per unit"
                },
                "status": {
                  "type": "string",
                  "description": "Status of this specific item"
                }
              }
            }
          },
          "notes": {
            "type": "string",
            "description": "Additional notes for the order"
          }
        }
      }
    }
  }
}